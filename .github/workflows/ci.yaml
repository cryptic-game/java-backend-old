name: CI

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:

env:
  JAVA_VERSION: 17
  JAVA_DISTRO: temurin

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Lint with Gradle
        run: ./gradlew checkstyleMain checkstyleTest spotbugsMain spotbugsTest pmdMain pmdTest --stacktrace --no-daemon

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 17 ]
        java-distro: [ temurin, zulu, liberica, microsoft ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ matrix.java-distro }}-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.java-distro }}-${{ matrix.java-version }}-

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.java-distro }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with Gradle
        run: ./gradlew test --stacktrace --no-daemon

  build:
    needs: [ lint, test ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ 'server', 'java-daemon', 'admin-panel' ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew :${{ matrix.service }}:shadowJar :${{ matrix.service }}:assemble --stacktrace --no-daemon

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.service }}
          path: ${{ matrix.service }}/build/libs

  docker:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      packages: write

    strategy:
      matrix:
        service: [ 'server', 'java-daemon', 'admin-panel' ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}
          tags: |
            type=edge
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.service }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.github-actions
          platforms: linux/amd64 #,linux/arm64/v8 #${{ matrix.platforms }} linux/arm/v7,
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVICE_NAME=${{ matrix.service }}
            JVM_VERSION=${{ env.JAVA_VERSION }}
          # JVM_IMPL=${{ matrix.jvm-impl }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
